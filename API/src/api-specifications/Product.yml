openapi: "3.0.0"
info:
  title: Itinerary API
  version: 1.0.0
  description: API for managing itineraries.

tags:
  - name: Product
    description: API for managing products

paths:
  /api/product/createProduct/{seller_id}:
    post:
      description: Create a product and link it to the seller_id
      tags:
        - Product
      parameters:
        - in: path
          name: seller_id
          required: true
          schema:
            type: string
          description: Seller ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Product name
                description:
                  type: string
                  description: Product description
                image:
                  type: string
                  description: Product image
                price:
                  type: number
                  format: float
                  description: Product price
                quantity:
                  type: number
                  format: int32
                  description: Product quantity
                sales:
                  type: number
                  format: int32
                  description: Product sales
                archieve_flag:
                  type: boolean
                  description: Product archive flag
              required:
                - name
                - description
                - price
                - quantity
                - sales
      responses:
        "201":
          description: Product is created
        "500":
          description: Internal Server Error

  /api/product/updateProduct/{product_id}:
    put:
      description: Update a product
      tags:
        - Product
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: string
          description: Product ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Product name
                description:
                  type: string
                  description: Product description
                image:
                  type: string
                  description: Product image
                price:
                  type: number
                  format: float
                  description: Product price
                quantity:
                  type: number
                  format: int32
                  description: Product quantity
                sales:
                  type: number
                  format: int32
                  description: Product sales
                archieve_flag:
                  type: boolean
                  description: Product archive flag
      responses:
        "200":
          description: Product is updated
        "404":
          description: Product not found
        "500":
          description: Internal Server Error

  /api/product/getFilteredProducts:
    get:
      description: Get filtered products
      tags:
        - Product
      parameters:
        - in: query
          name: price
          schema:
            type: string
          description: Price range
      responses:
        "200":
          description: Filtered products are fetched
        "500":
          description: Internal Server Error

  /api/product/getSortedProducts:
    get:
      tags:
        - Product
      summary: Get sorted products
      description: Get sorted products by ratings and price; direction 1=Asc and -1=Desc
      parameters:
        - in: query
          name: sort
          schema:
            type: string
          description: Sort criteria
        - in: query
          name: direction
          schema:
            type: number
          description: Sort direction
      responses:
        "200":
          description: Sorted products are fetched
        "500":
          description: Internal Server Error

  /api/product/getAllProducts:
    get:
      tags:
        - Product
      summary: Get all products
      description: Get all products
      responses:
        "200":
          description: All products are fetched
        "500":
          description: Internal Server Error
  
  /api/product/getProductsBySellerId/{seller_id}:
    get:
      tags:
        - Product
      summary: Get products by seller ID
      description: Get products by seller ID
      parameters:
        - in: path
          name: seller_id
          required: true
          schema:
            type: string
          description: Seller ID
      responses:
        "200":
          description: Products are fetched
        "404":
          description: Products not found
        "500":
          description: Internal Server Error

  /api/product/getProductByName/{product_name}:
    get:
      tags:
        - Product
      summary: Get product by name
      description: Get product by name
      parameters:
        - in: path
          name: product_name
          required: true
          schema:
            type: string
          description: Product name
      responses:
        "200":
          description: Product is fetched
        "404":
          description: Product not found
        "500":
          description: Internal Server Error

  /api/product/getFilterComponents:
    get:
      tags:
        - Product
      summary: Get filter components
      description: Get filter components
      responses:
        "200":
          description: Filter components are fetched
        "500":
          description: Internal Server Error
  /api/product/getProductById/{product_id}:
    get:
      tags:
        - Product
      summary: Get product by id
      description: Get product by id
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        "200":
          description: Product is fetched
        "404":
          description: Product not found
        "500":
          description: Internal Server Error   
  /api/product/getComments/{product_id}:
    get:
      tags:
        - Product
      summary: Get comments by product id
      description: Get comments by product id
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        "200":
          description: Comments are fetched
        "404":
          description: Comments not found
        "500":
          description: Internal Server Error             
