openapi: "3.0.0"
info:
  title: Itinerary API
  version: 1.0.0
  description: API for managing itineraries.
servers:
  - url: http://localhost:3000/api/itinerary
tags:
  - name: Itinerary
    description: Operations related to itinerary management.
paths:
  /api/itinerary/createItinerary:
    post:
      tags:
        - Itinerary
      summary: Create a new itinerary for a tour guide
      description: Automatically adds it to the tour guide's profile too.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tour_guide_id:
                  type: string
                  format: objectId
                name:
                  type: string
                  example: "Tour of the city"
                category:
                  type: string
                  format: objectId
                activities:
                  type: array
                  items:
                    type: string
                    format: objectId
                timeline:
                  type: array
                  items:
                    type: string
                    format: objectId
                locations:
                  type: array
                  items:
                    type: object
                    properties:
                      longitude:
                        type: number
                      latitude:
                        type: number
                duration:
                  type: string
                languages:
                  type: array
                  items:
                    type: string
                price:
                  type: number
                available_dates:
                  type: array
                  items:
                    type: string
                    format: date
                accessibility:
                  type: boolean
                pickup_loc:
                  type: object
                  properties:
                    longitude:
                      type: number
                    latitude:
                      type: number
                drop_off_loc:
                  type: object
                  properties:
                    longitude:
                      type: number
                    latitude:
                      type: number
                tags:
                  type: array
                  items:
                    type: string
                active_flag:
                  type: boolean
                inappropriate_flag:
                  type: boolean
      responses:
        201:
          description: Itinerary created successfully
        500:
          description: Internal server error.
  /api/itinerary/getItineraryByID/{itinerary_id}:
    get:
      tags:
        - Itinerary
      summary: Fetches itinerary information using the itinerary ID
      parameters:
        - name: itinerary_id
          in: path
          description: The itinerary we want to fetch.
          required: true
          schema:
            type: string
            format: objectId
            example: "6700067cce53c3263e1f8e5c"
      responses:
        200:
          description: Itinerary found successfully
        404:
          description: Itinerary not found.
        500:
          description: Internal server error.
  /api/itinerary/updateItinerary/{itinerary_id}:
    put:
      tags:
        - Itinerary
      summary: Update an itinerary for a tour guide
      description:
        If an itinerary is to be activated, it must have no bookings done by a tourist, even if the itinerary has multiple dates and the other dates are not booked.
        Deactivating an itinerary is possibly irreversible if the itinerary has bookings. Make sure to warn the user of such a thing.
        This does not prevent the tour guide who created the itinerary to see it, or users that booked it to see it.
        Note that even information not updated should be sent inside the request body.
      parameters:
        - name: itinerary_id
          in: path
          description: The itinerary we want to update.
          required: true
          schema:
            type: string
            format: objectId
            example: "6700067cce53c3263e1f8e5c"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category:
                  type: string
                  format: objectId
                activities:
                  type: array
                  items:
                    type: string
                    format: objectId
                    example: ["60d5f484f3f0c08d5c0f1b45", "60d5f484f3f0c08d5c0f1e85"]
                slots:
                  type: string
                  example: "ana le7ad delwaty mesh 3aref slots metrepresent ezay - es2al kamal fe deeh"
                locations:
                  type: array
                  items:
                    type: object
                    properties:
                      longitude:
                        type: number
                        example: 39085.29
                      latitude:
                        type: number
                duration:
                  type: string
                languages:
                  type: array
                  items:
                    type: string
                price:
                  type: number
                  format: float
                available_dates:
                  type: array
                  items:
                    type: string
                    format: date
                accessibility:
                  type: boolean
                pickup_loc:
                  type: object
                  properties:
                    longitude:
                      type: number
                    latitude:
                      type: number
                drop_off_loc:
                  type: object
                  properties:
                    longitude:
                      type: number
                    latitude:
                      type: number
                tags:
                  type: array
                  items:
                    type: string
                    format: objectId
                active_flag:
                  type: boolean
              example:
                name: "Tayren 7awela el 3alem"
                category: "60d5f484f3f0c08d5c0f1b45"
                activities:
                  - "60d5f484f3f0c08d5c0f1b45"
                  - "60d5f485f3f0c08d5c0f1b46"
                slots: "ana le 7ad delwaty mesh fahem slots betrepresent ezay - es2al kamal fe deh"
                locations:
                  - { "longitude": 34.0522, "latitude": -118.2437 }
                  - { "longitude": 904.0522, "latitude": -18.2437 }
                duration: "string"
                languages: ["English", "Spanish"]
                price: 3000
                available_dates: ["2024-11-01", "2024-11-05"]
                accessibility: true
                pickup_loc: { "longitude": 34.0522, "latitude": -118.2437 }
                drop_off_loc: { "longitude": 84.0522, "latitude": -818.2437 }
                tags:
                  - "60d5f484f3f0c08d5c0f1b45"
                  - "60d5f485f3f0c08d5c0f1b46"
                active_flag: true
      responses:
        200:
          description: Itinerary updated successfully
        400:
          description: Tourists have booked this itinerary, and it cannot be activated.
        404:
          description: Itinerary not found.
        500:
          description: Internal server error.
  /api/itinerary/deleteItinerary/{itinerary_id}:
    delete:
      tags:
        - Itinerary
      summary: Delete an itinerary by ID
      parameters:
        - name: itinerary_id
          in: path
          description: The itinerary we want to delete.
          required: true
          schema:
            type: string
            format: objectId
            example: "6700067cce53c3263e1f8e5c"
      responses:
        200:
          description: Itinerary deleted successfully
        404:
          description: Itinerary not found.
        500:
          description: Internal server error.
  /api/itinerary/getAllItinerariesByTourGuideID/{tour_guide_id}:
    get:
      tags:
        - Itinerary
      summary: Fetches all itineraries created by a specific tour guide
      parameters:
        - name: tour_guide_id
          in: path
          description: The one who owns the itineraries we want to see
          required: true
          schema:
            type: string
            format: objectId
      responses:
        200:
          description: Successful retrieval of itineraries
        404:
          description: Tour guide not found.
        500:
          description: Internal server error.
  /api/itinerary/getAllItineraries/{page}:
    get:
      tags:
        - Itinerary
      summary: Fetches all itineraries created in general
      parameters:
        - name: page
          in: path
          description: The page number
          required: true
          schema:
            type: number
            example: 2
      responses:
        200:
          description: Successful retrieval of itineraries
        500:
          description: Internal server error.
  /api/itinerary/getSearchItinerary:
    get:
      tags:
        - Itinerary
      summary: Retrieve itineraries from system
      description: Retrieve itineraries data by name, category, and tag
      parameters:
        - in: query
          name: name
          description: Name of the itinerary
          schema:
            type: string
        - in: query
          name: category
          description: Category of the itinerary
          schema:
            type: string
        - in: query
          name: tag
          description: Tag of the itinerary
          schema:
            type: string
      responses:
        200:
          description: List of Itineraries.
        400:
          description: Bad request.
        500:
          description: Internal server error.
  /api/itinerary/getUpcomingItineraries:
    get:
      tags:
        - Itinerary
      summary: Retrieve upcoming itineraries from system
      description: Retrieve upcoming itineraries data
      responses:
        200:
          description: List of upcoming itineraries.
        400:
          description: Bad request.
        500:
          description: Internal server error.
  /api/itinerary/getFilteredItineraries:
    get:
      tags:
        - Itinerary
      summary: Retrieve filtered itineraries from system by preferences, budget, date
      description: Retrieve filtered itineraries data
      parameters:
        - in: query
          name: budget
          description: Budget for the itinerary
          schema:
            type: string
        - in: query
          name: date
          description: Date of the itinerary
          schema:
            type: string
            format: date
        - in: query
          name: preferences
          description: Preferences of the itinerary
          schema:
            type: string
      responses:
        200:
          description: List of filtered itineraries.
        400:
          description: Bad request.
        500:
          description: Internal server error.
  /api/itinerary/getSortedItineraries:
    get:
      tags:
        - Itinerary
      summary: Retrieve sorted itineraries from system
      description: Retrieve sorted itineraries data by sort and direction sort as "ratings" or "price" and direction as 1=Asc , -1=Desc
      parameters:
        - in: query
          name: sort
          description: Sort the itineraries by ratings or price
          schema:
            type: string
        - in: query
          name: direction
          description: Direction of the sort
          schema:
            type: number
      responses:
        200:
          description: List of sorted itineraries.
        400:
          description: Bad request.
        500:
          description: Internal server error.
  /api/itinerary/getFilterComponents:
    get:
      tags:
        - Itinerary
      summary: Retrieve filter components for itineraries
      responses:
        200:
          description: List of filter components.
        400:
          description: Bad request.
        500:
          description: Internal server error.

  /api/itinerary/flagItinerary/{itinerary_id}:
    put:
      tags:
        - Itinerary
        - Admin
      summary: Flag an itinerary and prevent it to be shown to tourists.
      description: Flagging an itinerary is a permanent action. Make sure to warn the admin of such thing. This does not prevent the tour guide who
        created it to see it, but the admin cannot see it after flagging it (ironically enough). This logic will be changed. This does not affect any tourist
        who booked the itinerary, but maybe it should.
      parameters:
        - name: itinerary_id
          in: path
          description: The itinerary we want to flag.
          required: true
          schema:
            type: string
            format: objectId
            example: "6700067cce53c3263e1f8e5c"
      responses:
        200:
          description: Itinerary flagged successfully
        404:
          description: Itinerary not found.
        409:
          description: The itinerary is already flagged
        500:
          description: Internal server error.
  /api/itinerary/getComments/{itinerary_id}:
    get:
      tags:
        - Itinerary
      summary: Retrieve comments for an itinerary
      parameters:
        - name: itinerary_id
          in: path
          description: The itinerary we want to fetch comments for.
          required: true
          schema:
            type: string
            format: objectId
      responses:
        200:
          description: List of comments.
        404:
          description: Itinerary not found.
        500:
          description: Internal server error.        
